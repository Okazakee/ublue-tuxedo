name: Build and Push Aurora DX NVIDIA Stable Tuxedo Images

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - "README.md"
      - "docs/**"
      - "*.md"
  pull_request:
    paths-ignore:
      - "README.md"
      - "docs/**"
      - "*.md"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_PREFIX: okazakee

jobs:
  check-base-images:
    runs-on: ubuntu-latest
    if: github.event_name != 'push'
    outputs:
      skip_all: ${{ steps.check.outputs.skip_all }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y skopeo jq

      - name: Check base image digests
        id: check
        run: |
          bash scripts/check-base-images.sh --images ghcr.io/ublue-os/aurora-dx-nvidia:stable

  build-and-test:
    needs: check-base-images
    if: github.event_name == 'push' || (needs.check-base-images.outputs.skip_all == 'false')
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        variant: [aurora-dx-nvidia-stable]
        include:
          - variant: aurora-dx-nvidia-stable
            containerfile: containerfiles/Containerfile.aurora-dx-nvidia
            base_image: ghcr.io/ublue-os/aurora-dx-nvidia:stable
            tag: stable
            image_name: okazakee/aurora-dx-nvidia-tuxedo
            description: "Aurora DX NVIDIA Stable with Tuxedo drivers and TCC"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Extract MOK Certificates from Secrets
        run: |
          mkdir -p overlay/usr/share/aurora-tuxedo/mok/
          echo "${{ secrets.MOK_PRIVATE_KEY }}" > overlay/usr/share/aurora-tuxedo/mok/MOK.key
          echo "${{ secrets.MOK_CERTIFICATE_PEM }}" > overlay/usr/share/aurora-tuxedo/mok/MOK.crt
          echo "${{ secrets.MOK_CERTIFICATE_DER }}" | base64 -d > overlay/usr/share/aurora-tuxedo/mok/MOK.der


      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          file: ${{ matrix.containerfile }}
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.REGISTRY }}/${{ matrix.image_name }}:${{ matrix.tag }}
          labels: |
            org.opencontainers.image.description=${{ matrix.description }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.url=https://github.com/${{ github.repository }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3

      - name: Sign and verify image
        run: |
          cosign sign --yes ${{ env.REGISTRY }}/${{ matrix.image_name }}:${{ matrix.tag }}
          cosign verify --certificate-identity https://github.com/${{ github.repository_owner }}/.github/workflows/${{ github.workflow }}@refs/heads/${{ github.ref_name }} --certificate-oidc-issuer https://token.actions.githubusercontent.com ${{ env.REGISTRY }}/${{ matrix.image_name }}:${{ matrix.tag }}
