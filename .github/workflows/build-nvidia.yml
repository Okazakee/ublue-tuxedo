name: Build and Push NVIDIA Tuxedo Images

on:
  schedule:
    - cron: "0 2 * * 0" # Every Sunday at 2 AM UTC (stable)
    - cron: "0 2 */2 * *" # Every 2 days at 2 AM UTC (latest)
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'latest'
        type: choice
        options:
          - stable
          - latest

permissions:
  contents: write
  packages: write
  id-token: write

env:
  REGISTRY: ghcr.io

jobs:
  check-base-images:
    runs-on: ubuntu-latest
    outputs:
      variants_to_build: ${{ steps.check.outputs.variants_to_build }}
      skip_all: ${{ steps.check.outputs.skip_all }}
      build_type: ${{ steps.check.outputs.build_type }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y skopeo jq

      - name: Determine build type and variants
        id: check
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            # Manual trigger
            BUILD_TYPE="${{ github.event.inputs.build_type }}"
          else
            # Scheduled trigger - determine by cron schedule
            DAY_OF_WEEK=$(date +%u)  # 1=Monday, 7=Sunday
            
            if [ $DAY_OF_WEEK -eq 7 ]; then
              # Sunday = stable builds (cron: "0 2 * * 0")
              BUILD_TYPE="stable"
            else
              # Every 2 days except Sunday = latest builds (cron: "0 2 */2 * *")
              BUILD_TYPE="latest"
            fi
          fi
          
          echo "build_type=$BUILD_TYPE" >> "$GITHUB_OUTPUT"
          
          if [ "$BUILD_TYPE" = "stable" ]; then
            echo "variants_to_build=[\"aurora-nvidia-stable\",\"aurora-dx-nvidia-stable\",\"bluefin-nvidia-stable\",\"bluefin-dx-nvidia-stable\",\"bazzite-nvidia-stable\",\"bazzite-nvidia-open-stable\",\"bazzite-deck-nvidia-stable\",\"bazzite-gnome-nvidia-stable\",\"bazzite-gnome-nvidia-open-stable\",\"bazzite-deck-nvidia-gnome-stable\"]" >> "$GITHUB_OUTPUT"
          else
            echo "variants_to_build=[\"aurora-nvidia-latest\",\"aurora-dx-nvidia-latest\",\"bluefin-nvidia-latest\",\"bluefin-dx-nvidia-latest\",\"bazzite-nvidia-latest\",\"bazzite-nvidia-open-latest\",\"bazzite-deck-nvidia-latest\",\"bazzite-gnome-nvidia-latest\",\"bazzite-gnome-nvidia-open-latest\",\"bazzite-deck-nvidia-gnome-latest\"]" >> "$GITHUB_OUTPUT"
          fi
          
          echo "skip_all=false" >> "$GITHUB_OUTPUT"

  build-and-test:
    needs: check-base-images
    if: needs.check-base-images.outputs.skip_all == 'false'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        variant: ${{ fromJson(needs.check-base-images.outputs.variants_to_build) }}
        include:
          # Aurora NVIDIA variants
          - variant: aurora-nvidia-stable
            containerfile: containerfiles/Containerfile.aurora-nvidia
            base_image: ghcr.io/ublue-os/aurora-nvidia:stable
            tag: stable
            image_name: okazakee/aurora-nvidia-tuxedo
            description: "Aurora NVIDIA Stable with Tuxedo drivers and TCC"
          - variant: aurora-nvidia-latest
            containerfile: containerfiles/Containerfile.aurora-nvidia-latest
            base_image: ghcr.io/ublue-os/aurora-nvidia:latest
            tag: latest
            image_name: okazakee/aurora-nvidia-tuxedo
            description: "Aurora NVIDIA Latest with Tuxedo drivers and TCC"
          - variant: aurora-dx-nvidia-stable
            containerfile: containerfiles/Containerfile.aurora-dx-nvidia
            base_image: ghcr.io/ublue-os/aurora-dx-nvidia:stable
            tag: stable
            image_name: okazakee/aurora-dx-nvidia-tuxedo
            description: "Aurora DX NVIDIA Stable with Tuxedo drivers and TCC"
          - variant: aurora-dx-nvidia-latest
            containerfile: containerfiles/Containerfile.aurora-dx-nvidia-latest
            base_image: ghcr.io/ublue-os/aurora-dx-nvidia:latest
            tag: latest
            image_name: okazakee/aurora-dx-nvidia-tuxedo
            description: "Aurora DX NVIDIA Latest with Tuxedo drivers and TCC"
          # Bluefin NVIDIA variants
          - variant: bluefin-nvidia-stable
            containerfile: containerfiles/Containerfile.bluefin-nvidia
            base_image: ghcr.io/ublue-os/bluefin-nvidia:stable
            tag: stable
            image_name: okazakee/bluefin-nvidia-tuxedo
            description: "Bluefin NVIDIA Stable with Tuxedo drivers and TCC"
          - variant: bluefin-nvidia-latest
            containerfile: containerfiles/Containerfile.bluefin-nvidia-latest
            base_image: ghcr.io/ublue-os/bluefin-nvidia:latest
            tag: latest
            image_name: okazakee/bluefin-nvidia-tuxedo
            description: "Bluefin NVIDIA Latest with Tuxedo drivers and TCC"
          - variant: bluefin-dx-nvidia-stable
            containerfile: containerfiles/Containerfile.bluefin-dx-nvidia
            base_image: ghcr.io/ublue-os/bluefin-dx-nvidia:stable
            tag: stable
            image_name: okazakee/bluefin-nvidia-tuxedo-dx
            description: "Bluefin DX NVIDIA Stable with Tuxedo drivers and TCC"
          - variant: bluefin-dx-nvidia-latest
            containerfile: containerfiles/Containerfile.bluefin-dx-nvidia-latest
            base_image: ghcr.io/ublue-os/bluefin-dx-nvidia:latest
            tag: latest
            image_name: okazakee/bluefin-nvidia-tuxedo-dx
            description: "Bluefin DX NVIDIA Latest with Tuxedo drivers and TCC"
          # Bazzite NVIDIA variants
          - variant: bazzite-nvidia-stable
            containerfile: containerfiles/Containerfile.bazzite-nvidia
            base_image: ghcr.io/ublue-os/bazzite-nvidia:stable
            tag: stable
            image_name: okazakee/bazzite-nvidia-tuxedo
            description: "Bazzite NVIDIA Stable with Tuxedo drivers and TCC"
          - variant: bazzite-nvidia-latest
            containerfile: containerfiles/Containerfile.bazzite-nvidia-latest
            base_image: ghcr.io/ublue-os/bazzite-nvidia:latest
            tag: latest
            image_name: okazakee/bazzite-nvidia-tuxedo
            description: "Bazzite NVIDIA Latest with Tuxedo drivers and TCC"
          - variant: bazzite-nvidia-open-stable
            containerfile: containerfiles/Containerfile.bazzite-nvidia-open
            base_image: ghcr.io/ublue-os/bazzite-nvidia-open:stable
            tag: stable
            image_name: okazakee/bazzite-nvidia-open-tuxedo
            description: "Bazzite NVIDIA Open Stable with Tuxedo drivers and TCC"
          - variant: bazzite-nvidia-open-latest
            containerfile: containerfiles/Containerfile.bazzite-nvidia-open-latest
            base_image: ghcr.io/ublue-os/bazzite-nvidia-open:latest
            tag: latest
            image_name: okazakee/bazzite-nvidia-open-tuxedo
            description: "Bazzite NVIDIA Open Latest with Tuxedo drivers and TCC"
          - variant: bazzite-deck-nvidia-stable
            containerfile: containerfiles/Containerfile.bazzite-deck-nvidia
            base_image: ghcr.io/ublue-os/bazzite-deck-nvidia:stable
            tag: stable
            image_name: okazakee/bazzite-deck-nvidia-tuxedo
            description: "Bazzite Deck NVIDIA Stable with Tuxedo drivers and TCC"
          - variant: bazzite-deck-nvidia-latest
            containerfile: containerfiles/Containerfile.bazzite-deck-nvidia-latest
            base_image: ghcr.io/ublue-os/bazzite-deck-nvidia:latest
            tag: latest
            image_name: okazakee/bazzite-deck-nvidia-tuxedo
            description: "Bazzite Deck NVIDIA Latest with Tuxedo drivers and TCC"
          - variant: bazzite-gnome-nvidia-stable
            containerfile: containerfiles/Containerfile.bazzite-gnome-nvidia
            base_image: ghcr.io/ublue-os/bazzite-gnome-nvidia:stable
            tag: stable
            image_name: okazakee/bazzite-gnome-nvidia-tuxedo
            description: "Bazzite GNOME NVIDIA Stable with Tuxedo drivers and TCC"
          - variant: bazzite-gnome-nvidia-latest
            containerfile: containerfiles/Containerfile.bazzite-gnome-nvidia-latest
            base_image: ghcr.io/ublue-os/bazzite-gnome-nvidia:latest
            tag: latest
            image_name: okazakee/bazzite-gnome-nvidia-tuxedo
            description: "Bazzite GNOME NVIDIA Latest with Tuxedo drivers and TCC"
          - variant: bazzite-gnome-nvidia-open-stable
            containerfile: containerfiles/Containerfile.bazzite-gnome-nvidia-open
            base_image: ghcr.io/ublue-os/bazzite-gnome-nvidia-open:stable
            tag: stable
            image_name: okazakee/bazzite-gnome-nvidia-open-tuxedo
            description: "Bazzite GNOME NVIDIA Open Stable with Tuxedo drivers and TCC"
          - variant: bazzite-gnome-nvidia-open-latest
            containerfile: containerfiles/Containerfile.bazzite-gnome-nvidia-open-latest
            base_image: ghcr.io/ublue-os/bazzite-gnome-nvidia-open:latest
            tag: latest
            image_name: okazakee/bazzite-gnome-nvidia-open-tuxedo
            description: "Bazzite GNOME NVIDIA Open Latest with Tuxedo drivers and TCC"
          - variant: bazzite-deck-nvidia-gnome-stable
            containerfile: containerfiles/Containerfile.bazzite-deck-nvidia-gnome
            base_image: ghcr.io/ublue-os/bazzite-deck-nvidia-gnome:stable
            tag: stable
            image_name: okazakee/bazzite-deck-nvidia-gnome-tuxedo
            description: "Bazzite Deck NVIDIA GNOME Stable with Tuxedo drivers and TCC"
          - variant: bazzite-deck-nvidia-gnome-latest
            containerfile: containerfiles/Containerfile.bazzite-deck-nvidia-gnome-latest
            base_image: ghcr.io/ublue-os/bazzite-deck-nvidia-gnome:latest
            tag: latest
            image_name: okazakee/bazzite-deck-nvidia-gnome-tuxedo
            description: "Bazzite Deck NVIDIA GNOME Latest with Tuxedo drivers and TCC"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ matrix.image_name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=${{ matrix.tag }},enable={{is_default_branch}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.containerfile }}
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

      - name: Sign with Cosign
        env:
          TUF_ROOT: ${{ secrets.TUF_ROOT }}
        run: |
          echo "${{ secrets.COSIGN_PRIVATE_KEY }}" | cosign sign --yes ${{ env.REGISTRY }}/${{ matrix.image_name }}:${{ matrix.tag }}
